name: Deploy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: github deployment
        id: deployment
        uses: actions/github-script@0.9.0
        with:
          script: |
            const deployment = await github.repos.createDeployment({
              ...context.repo,
              ref: '${{ github.sha }}',
              environment: 'production',
              required_contexts: [],
              mediaType: { previews: ['flash', 'ant-man'] }
            })

            return deployment.data.id;

      - name: github deployment in progress
        uses: actions/github-script@0.9.0
        with:
          script: |
            github.repos.createDeploymentStatus({
              ...context.repo,
              deployment_id: ${{ steps.deployment.outputs.result }},
              state: 'in_progress',
              log_url: 'https://github.com/${{ github.repository }}/commit/${{ github.sha }}/checks',
              mediaType: { previews: ['flash', 'ant-man'] }
            })

      - name: Set up Ruby 2.7.1
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.1

      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: bundler configure
        run: |
          gem install bundler
          bundle config --global frozen 1
          bundle config set deployment 'true'
          bundle config set path 'vendor/bundle'
          bundle config set without 'development:test'

      - name: bundle install
        run: bundle install --jobs 4 --retry 3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: rails assets:precompile
        run: bundle exec rails assets:precompile
        env:
          RAILS_ENV: production
          SECRET_KEY_BASE: disabled

      - name: docker login
        run: docker login docker.pkg.github.com --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }}

      - name: docker build
        run: |
          docker build . \
            -t docker.pkg.github.com/${{ github.repository }}/pine:${{ github.sha }} \
            -t docker.pkg.github.com/${{ github.repository }}/pine:latest

      - name: docker push
        run: |
          docker push docker.pkg.github.com/${{ github.repository }}/pine:${{ github.sha }}
          docker push docker.pkg.github.com/${{ github.repository }}/pine:latest

      - name: install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: doctl kubernetes kubeconfig
        run: doctl kubernetes cluster kubeconfig save k8s-lon1

      - name: kustomize
        run: |
          cat >> k8s/kustomization.yaml <<EOF
          patchesStrategicMerge:
            - image.yaml
          EOF

          cat > k8s/image.yaml <<EOF
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: pine
            annotations:
              kubernetes.io/change-cause: "updated to revision https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
          spec:
            template:
              spec:
                containers:
                  - name: pine
                    image: docker.pkg.github.com/${{ github.repository }}/pine:${{ github.sha }}
          EOF

      - name: kubectl apply
        run: kubectl apply -k k8s/

      - name: kubectl rollout status
        run: kubectl rollout status deployment/pine --timeout=3m

      - name: github deployment success
        uses: actions/github-script@0.9.0
        if: success()
        with:
          script: |
            github.repos.createDeploymentStatus({
              ...context.repo,
              deployment_id: ${{ steps.deployment.outputs.result }},
              state: 'success',
              environment_url: 'https://pine.uncomplicated.systems',
              auto_inactive: true,
              log_url: 'https://github.com/${{ github.repository }}/commit/${{ github.sha }}/checks',
              mediaType: { previews: ['flash', 'ant-man'] }
            })

      - name: github deployment failure
        uses: actions/github-script@0.9.0
        if: cancelled() || failure()
        with:
          script: |
            github.repos.createDeploymentStatus({
              ...context.repo,
              deployment_id: ${{ steps.deployment.outputs.result }},
              state: 'failure',
              log_url: 'https://github.com/${{ github.repository }}/commit/${{ github.sha }}/checks',
              mediaType: { previews: ['flash', 'ant-man'] }
            })
